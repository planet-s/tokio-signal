var searchIndex = {};
searchIndex["tokio_signal"] = {"doc":"Asynchronous signal handling for Tokio","items":[[5,"ctrl_c","tokio_signal","Creates a stream which receives \"ctrl-c\" notifications sent to a process.",null,{"o":{"g":["iostream"],"n":"iofuture"}}],[5,"ctrl_c_handle","","Creates a stream which receives \"ctrl-c\" notifications sent to a process.",null,{"i":[{"n":"handle"}],"o":{"g":["iostream"],"n":"iofuture"}}],[0,"unix","","Unix-specific types for signal handling.",null,null],[17,"SIGUSR1","tokio_signal::unix","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGTERM","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGTRAP","","",null,null],[3,"Signal","","An implementation of `Stream` for receiving a particular type of signal.",null,null],[11,"new","","Creates a new stream which will receive notifications when the current process receives the signal `signal`.",0,{"i":[{"n":"c_int"}],"o":{"g":["signal"],"n":"iofuture"}}],[11,"with_handle","","Creates a new stream which will receive notifications when the current process receives the signal `signal`.",0,{"i":[{"n":"c_int"},{"n":"handle"}],"o":{"g":["signal"],"n":"iofuture"}}],[11,"poll","","",0,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"poll"}}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[6,"IoFuture","tokio_signal","A future whose error is `io::Error`",null,null],[6,"IoStream","","A stream whose error is `io::Error`",null,null]],"paths":[[3,"Signal"]]};
initSearch(searchIndex);
